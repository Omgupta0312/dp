//link : https://www.codingninjas.com/codestudio/problems/minimum-path-sum_985349?source=youtube&campaign=striver_dp_videos&utm_source=youtube&utm_medium=affiliate&utm_campaign=striver_dp_videos
#include<bits/stdc++.h>
// int minSumPath(vector<vector<int>> &grid) {
//     // Write your code here.
//     vector<vector<int>> dp(grid.size(),vector<int>(grid[0].size(),-1));
//     int n=grid.size(),m=grid[0].size();
//     for(int i=0;i<n;i++)
//     {
//         for(int j=0;j<m;j++)
//         {
//             if(i==0 && j==0 ) dp[i][j]=grid[i][j];
//             else{
//                  int up=INT_MAX,left=INT_MAX;
//                 if(i>0) up = grid[i][j] + dp[i-1][j];
//                 if(j>0) left= grid[i][j]+ dp[i][j-1];

//                 dp[i][j] = min(up,left);
//             }
//         }
//     }
//     return dp[n-1][m-1];
// }

int minSumPath(vector<vector<int>> &grid){
    vector<int> dp (grid[0].size(),-1);
    int n=grid.size(),m=grid[0].size();
    dp[0]=grid[0][0];
    for(int i=0;i<n;i++)
    {
        vector<int> temp(m,0);
        for(int j=0;j<m;j++)
        {
            if(i==0 && j==0 ) temp[j]=grid[i][j];
            else{
                 int up=INT_MAX,left=INT_MAX;
                if(i>0) up = grid[i][j] + dp[j];
                if(j>0) left= grid[i][j]+ temp[j-1];

                temp[j] = min(up,left);
            }
        }
        dp=temp;
    }
    return dp[m-1];

}
