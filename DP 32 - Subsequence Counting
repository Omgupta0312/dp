#include <bits/stdc++.h>
const unsigned int mod=1000000007;
int helper(string &s,string &t,int i,int j,vector<vector<int>> &dp)
{
    if(j<0) return 1;
    if(i<0) return 0;
    if(dp[i][j]!=-1) return dp[i][j];
    if(s[i]==t[j]) return dp[i][j] = (helper(s,t,i-1,j-1,dp)%mod + helper(s,t,i-1,j,dp)%mod)%mod;
    else return dp[i][j] = helper(s,t,i-1,j,dp)%mod;
}
int subsequenceCounting(string &t, string &s, int lt, int ls) {
    // Write your code here.
    // vector<vector<int>>dp(lt,vector<int>(ls,-1));
    // return helper(t,s,lt-1,ls-1,dp)%mod;

    vector<vector<int>> dp(t.size()+1,vector<int>(s.size()+1,0));
    for(int i=0;i<lt;i++) dp[i][0] = 1;
    for(int i=1;i<=lt;i++){
        for(int j=1;j<=ls;j++){
            if(t[i-1] == s[j-1]){
                dp[i][j] = (dp[i-1][j-1]%mod + dp[i-1][j]%mod ) %mod;
            }else{
                dp[i][j] = dp[i-1][j]%mod;
            }
        }
    }
    return dp[lt][ls];


} 
