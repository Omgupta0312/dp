class Solution {
public:
    int helper(vector<int> &v,int i,int p,int &fee,vector<vector<int>> &dp){
       if(i ==  v.size()){
           if(p==1) return 0;
           return -1e8;
       }
           
       int ans = -1e8;
       if(dp[i][p]!=-1) 
            return dp[i][p];

       if(p==1){
            ans = max(ans,- v[i] - fee + helper(v,i+1,0,fee,dp));
       }else{
            ans = max(ans, v[i] +  helper(v,i+1,1,fee,dp));
       }

       ans = max(ans, helper(v,i+1,p,fee,dp));

       return  dp[i][p] = ans;
    }
   
    int maxProfit(vector<int>& prices, int fee) {
        vector<vector<int>> dp(prices.size(),vector<int>(2,-1));
     
        int ans = 0;
        
         ans =  helper(prices,0,1,fee,dp);
        return ans;
    }
};
